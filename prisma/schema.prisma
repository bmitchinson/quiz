datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Teacher {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  grade    Int       @db.SmallInt
  students Student[] @relation("TeacherStudents")
  // end-of-year: add year "2324" attr to teacher, update teacher login to query
  //     that year

  createdAt DateTime @default(now())
}

model Student {
  id        Int      @id @default(autoincrement())
  name      String
  archived  Boolean  @default(false)
  createdAt DateTime @default(now())

  teacherId Int
  teacher   Teacher @relation("TeacherStudents", fields: [teacherId], references: [id], onDelete: Cascade)

  scores  Score[]
  Drawing Drawing[]

  @@unique([name, teacherId])
}

model Quiz {
  id             Int      @id @default(autoincrement())
  accessCode     String   @unique @db.VarChar(6)
  questionsData  String   @db.VarChar(500)
  totalQuestions Int
  archived       Boolean  @default(false)
  createdAt      DateTime @default(now())

  // old
  title String @db.VarChar(50)
  // todo: remove title

  // new
  year           Int
  grade          Int
  quarter        Int
  sequenceLetter String @db.VarChar(1)

  scores  Score[]
  Drawing Drawing[]
}

model Score {
  id             Int       @id @default(autoincrement())
  correctAnswers Int       @default(0)
  timeStarted    DateTime?
  timeFinished   DateTime?
  studentId      Int
  quizCode       String    @db.VarChar(6)

  student Student @relation(fields: [studentId], references: [id], onDelete: Cascade)
  quiz    Quiz    @relation(fields: [quizCode], references: [accessCode], onDelete: Cascade)

  createdAt      DateTime @default(now())
  answers        String[] @default([])
  quizEndedEarly Boolean  @default(false)

  @@unique([quizCode, studentId])
}

model Drawing {
  id        Int    @id @default(autoincrement())
  jpgBase64 String? @db.VarChar(409600) // Limits to 400KB
  // there are more efficient ways to store this with buffer or postgrs text but I don't care

  studentId Int
  student   Student @relation(fields: [studentId], references: [id], onDelete: Cascade)

  accessCode String @db.VarChar(6)
  quiz       Quiz   @relation(fields: [accessCode], references: [accessCode], onDelete: Cascade)

  @@unique([accessCode, studentId])

  timeStarted    DateTime?
}
